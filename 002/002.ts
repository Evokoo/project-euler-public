// Even Fibonacci numbers - Problem 002
// https://projecteuler.net/problem=2

/*
Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:

1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.
*/

function evenFibonacciSum(limit: number): number {
	let sum: number = 0;

	function fibonacci(
		n: number,
		cache: Map<number, number> = new Map()
	): number {
		if (cache.has(n)) return cache.get(n)!;
		if (n <= 2) return 1;

		cache.set(n, fibonacci(n - 1, cache)! + fibonacci(n - 2, cache)!);

		const current = cache.get(n) ?? 0;

		if (current >= 4000000) {
			return sum;
		} else if (current % 2 === 0) {
			sum += cache.get(n)!;
		}

		return cache.get(n)!;
	}

	return fibonacci(limit);
}

console.log(evenFibonacciSum(1000));
